{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { PrimeIcons } from 'primeng/api';\nlet StatusComponent = class StatusComponent {\n  get getStatus() {\n    return [...this.statuses];\n  }\n  constructor(userService, statusService, toastr) {\n    this.userService = userService;\n    this.statusService = statusService;\n    this.toastr = toastr;\n    this.statuses = [];\n    this.visibleModal = false;\n    this.deleteModal = false;\n    this.label = 'Crear';\n    this.header = '';\n    this.action = '';\n    this.message = '';\n    this.messageResponse = '';\n    this.rowCreate = {\n      nombre: '',\n      color: ''\n    };\n    this.rowSelectedEdit = {\n      _id: '',\n      nombre: '',\n      color: '',\n      creador_id: '',\n      modificador_id: '',\n      esta_eliminado: false,\n      actualizado_a: new Date()\n    };\n    this.rowSelectedDelete = {\n      _id: ''\n    };\n    this.columns = [{\n      name: 'Id',\n      key: '_id',\n      show: false,\n      isAvailableOnCreation: true,\n      isAvailableOnEdit: true\n    }, {\n      name: 'Nombre',\n      key: 'nombre',\n      show: true,\n      isAvailableOnCreation: true,\n      isAvailableOnEdit: true\n    }, {\n      name: 'Color',\n      key: 'color',\n      show: true,\n      isAvailableOnCreation: true,\n      isAvailableOnEdit: true\n    }, {\n      name: 'Creador',\n      key: 'creador_id',\n      show: false,\n      isAvailableOnCreation: true,\n      isAvailableOnEdit: true\n    }, {\n      name: 'modificador',\n      key: 'modificador_id',\n      show: false,\n      isAvailableOnCreation: true,\n      isAvailableOnEdit: true\n    }, {\n      name: 'Creado',\n      key: 'creado_a',\n      show: true,\n      isAvailableOnCreation: true,\n      isAvailableOnEdit: true\n    }, {\n      name: 'Actualizado',\n      key: 'actualizado_a',\n      show: true,\n      isAvailableOnCreation: true,\n      isAvailableOnEdit: true\n    }, {\n      name: 'Acciones',\n      key: 'acciones',\n      show: true,\n      isAvailableOnCreation: true,\n      isAvailableOnEdit: true,\n      hasEditButton: true,\n      hasRemoveButton: true,\n      hasCreateButton: true,\n      edit: row => {\n        this.rowSelectedEdit = row;\n        this.visibleModal = true;\n        this.label = 'Guardar Cambios';\n        this.header = 'Editar grupo';\n        this.action = 'edit';\n      },\n      remove: row => {\n        this.rowSelectedDelete = row;\n        this.label = 'Eliminar';\n        this.header = 'Eliminar grupo';\n        this.action = 'delete';\n        this.message = `¿Está seguro que desea eliminar el grupo: ${row._id}?`;\n        this.deleteModal = true;\n      },\n      create: () => {\n        this.action = 'create';\n        this.visibleModal = true;\n        this.header = 'Crear grupo';\n        this.label = 'Crear';\n      },\n      createIcon: PrimeIcons.PLUS,\n      editIcon: PrimeIcons.PENCIL,\n      removeIcon: PrimeIcons.TRASH\n    }];\n    this.columnsToDeleteByEdit = ['acciones', 'creado_a', 'actualizado_a', 'creador_id', 'modificador_id'];\n    this.columnsToDeleteByCreate = ['acciones', 'creado_a', 'actualizado_a', 'creador_id', 'modificador_id', '_id'];\n  }\n  ngOnInit() {\n    this.userService.populate();\n    this.fetchGroups();\n  }\n  fetchGroups() {\n    this.statusService.getStatuses().subscribe({\n      next: response => {\n        this.statuses = this.statusService.materializeStatus(response);\n      },\n      error: error => console.error(error)\n    });\n  }\n  filteredColums() {\n    let filteredColumns = this.columns.filter(column => column.show === true);\n    return filteredColumns;\n  }\n  onSubmitStatus() {\n    this.visibleModal = false;\n    this.deleteModal = false;\n    if (this.action === 'edit') {\n      this.statusService.editStatus(this.rowSelectedEdit).subscribe({\n        next: response => {\n          this.toastr.success(response.message, 'Éxito');\n        },\n        error: error => {\n          this.toastr.error(error?.message, 'Error');\n        }\n      });\n      this.rowSelectedEdit = {};\n    }\n    if (this.action === 'create') {\n      this.statusService.createStatus(this.rowCreate).subscribe({\n        next: response => {\n          this.toastr.success(response.message, 'Éxito');\n          this.fetchGroups();\n        }\n      });\n      this.rowCreate = {};\n    }\n    if (this.action === 'delete') {\n      this.statusService.deleteStatus(this.rowSelectedDelete._id).subscribe({\n        next: response => {\n          this.toastr.success(response.message, 'Éxito');\n        },\n        error: error => this.toastr.error(error?.error?.message, 'Error')\n      });\n      this.rowSelectedDelete = {};\n    }\n    this.fetchGroups();\n  }\n  createNewRecord() {\n    this.action = 'create';\n    this.visibleModal = true;\n    this.header = 'Crear estado';\n    this.label = 'Crear';\n  }\n  getObjectByAction() {\n    return this.action === 'edit' ? this.rowSelectedEdit : this.rowCreate;\n  }\n  getColumnsByAction() {\n    if (this.action === 'edit') {\n      return this.columns.filter(column => !this.columnsToDeleteByEdit.includes(column.key));\n    }\n    return this.columns.filter(column => !this.columnsToDeleteByCreate.includes(column.key));\n  }\n};\nStatusComponent = __decorate([Component({\n  selector: 'app-status',\n  templateUrl: './status.component.html',\n  styleUrls: ['./status.component.css']\n})], StatusComponent);\nexport { StatusComponent };","map":{"version":3,"mappings":"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","names":["Component","PrimeIcons","StatusComponent","getStatus","statuses","constructor","userService","statusService","toastr","nombre","color","_id","creador_id","modificador_id","esta_eliminado","actualizado_a","Date","name","key","show","isAvailableOnCreation","isAvailableOnEdit","hasEditButton","hasRemoveButton","hasCreateButton","edit","row","rowSelectedEdit","visibleModal","label","header","action","remove","rowSelectedDelete","message","deleteModal","create","createIcon","PLUS","editIcon","PENCIL","removeIcon","TRASH","ngOnInit","populate","fetchGroups","getStatuses","subscribe","next","response","materializeStatus","error","console","filteredColums","filteredColumns","columns","filter","column","onSubmitStatus","editStatus","success","createStatus","rowCreate","deleteStatus","createNewRecord","getObjectByAction","getColumnsByAction","columnsToDeleteByEdit","includes","columnsToDeleteByCreate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\nayeli\\OneDrive\\Escritorio\\service-desk\\frontend\\src\\app\\pages\\estados\\status.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { UserService } from 'src/app/core';\r\nimport {\r\n  Status,\r\n  StatusCreate,\r\n  StatusDelete,\r\n  StatusEdit,\r\n  StatusResponse,\r\n} from 'src/app/core/interfaces/status.interface';\r\nimport { ColumnTable } from 'src/app/core/interfaces/sidebar.links.interface';\r\nimport { StatusService } from 'src/app/core/services/status.service';\r\nimport { PrimeIcons } from 'primeng/api';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-status',\r\n  templateUrl: './status.component.html',\r\n  styleUrls: ['./status.component.css'],\r\n})\r\nexport class StatusComponent {\r\n  private statuses: Status[] = [];\r\n  get getStatus(): Status[] {\r\n    return [...this.statuses];\r\n  }\r\n  visibleModal: boolean = false;\r\n  deleteModal: boolean = false;\r\n  label: string = 'Crear';\r\n  header: string = '';\r\n  action: string = '';\r\n  message: string = '';\r\n  messageResponse: string = '';\r\n  rowCreate: StatusCreate = {\r\n    nombre: '',\r\n    color: '',\r\n  };\r\n  rowSelectedEdit: StatusEdit = {\r\n    _id: '',\r\n    nombre: '',\r\n    color: '',\r\n    creador_id: '',\r\n    modificador_id: '',\r\n    esta_eliminado: false,\r\n    actualizado_a: new Date(),\r\n  };\r\n  rowSelectedDelete: StatusDelete = { _id: ''};\r\n  columns: ColumnTable[] = [\r\n    {\r\n      name: 'Id',\r\n      key: '_id',\r\n      show: false,\r\n      isAvailableOnCreation: true,\r\n      isAvailableOnEdit: true,\r\n    },\r\n    {\r\n      name: 'Nombre',\r\n      key: 'nombre',\r\n      show: true,\r\n      isAvailableOnCreation: true,\r\n      isAvailableOnEdit: true,\r\n    },\r\n    {\r\n      name: 'Color',\r\n      key: 'color',\r\n      show: true,\r\n      isAvailableOnCreation: true,\r\n      isAvailableOnEdit: true,\r\n    },\r\n    {\r\n      name: 'Creador',\r\n      key: 'creador_id',\r\n      show: false,\r\n      isAvailableOnCreation: true,\r\n      isAvailableOnEdit: true,\r\n    },\r\n    {\r\n      name: 'modificador',\r\n      key: 'modificador_id',\r\n      show: false,\r\n      isAvailableOnCreation: true,\r\n      isAvailableOnEdit: true,\r\n    },\r\n    {\r\n      name: 'Creado',\r\n      key: 'creado_a',\r\n      show: true,\r\n      isAvailableOnCreation: true,\r\n      isAvailableOnEdit: true,\r\n    },\r\n    {\r\n      name: 'Actualizado',\r\n      key: 'actualizado_a',\r\n      show: true,\r\n      isAvailableOnCreation: true,\r\n      isAvailableOnEdit: true,\r\n    },\r\n    {\r\n      name: 'Acciones',\r\n      key: 'acciones',\r\n      show: true,\r\n      isAvailableOnCreation: true,\r\n      isAvailableOnEdit: true,\r\n      hasEditButton: true,\r\n      hasRemoveButton: true,\r\n      hasCreateButton: true,\r\n      edit: (row: StatusEdit) => {\r\n        this.rowSelectedEdit = row;\r\n        this.visibleModal = true;\r\n        this.label = 'Guardar Cambios';\r\n        this.header = 'Editar grupo';\r\n        this.action = 'edit';\r\n      },\r\n      remove: (row: StatusDelete) => {\r\n        this.rowSelectedDelete = row;\r\n        this.label = 'Eliminar';\r\n        this.header = 'Eliminar grupo';\r\n        this.action = 'delete';\r\n        this.message = `¿Está seguro que desea eliminar el grupo: ${row._id}?`;\r\n        this.deleteModal = true;\r\n      },\r\n      create: () => {\r\n        this.action = 'create';\r\n        this.visibleModal = true;\r\n        this.header = 'Crear grupo';\r\n        this.label = 'Crear';\r\n      },\r\n      createIcon: PrimeIcons.PLUS,\r\n      editIcon: PrimeIcons.PENCIL,\r\n      removeIcon: PrimeIcons.TRASH,\r\n    },\r\n  ];\r\n  \r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private statusService: StatusService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userService.populate();\r\n    this.fetchGroups();\r\n  }\r\n\r\n  fetchGroups(): void {\r\n    this.statusService.getStatuses().subscribe({\r\n      next: (response) => {\r\n        this.statuses = this.statusService.materializeStatus(response);\r\n\r\n      },\r\n      error: (error) => console.error(error),\r\n    });\r\n  }\r\n\r\n  filteredColums(): ColumnTable[] {\r\n    let filteredColumns = this.columns.filter((column: ColumnTable) => column.show === true);\r\n\r\n    return filteredColumns\r\n  };\r\n\r\n  onSubmitStatus(): void {\r\n    this.visibleModal = false;\r\n    this.deleteModal = false;\r\n    if (this.action === 'edit') {\r\n      this.statusService.editStatus(this.rowSelectedEdit).subscribe({\r\n        next: (response) => {\r\n          this.toastr.success(response.message, 'Éxito');\r\n        },\r\n        error: (error) => {\r\n          this.toastr.error(error?.message, 'Error');\r\n        },\r\n      });\r\n      this.rowSelectedEdit = {} as StatusEdit;\r\n    }\r\n    if (this.action === 'create') {\r\n      this.statusService.createStatus(this.rowCreate).subscribe({\r\n        next: (response) => {\r\n          this.toastr.success(response.message, 'Éxito');\r\n          this.fetchGroups();\r\n        },\r\n      });\r\n      this.rowCreate = {} as StatusCreate;\r\n    }\r\n    if(this.action === 'delete'){\r\n      this.statusService.deleteStatus(this.rowSelectedDelete._id).subscribe({\r\n        next: (response) => {\r\n          this.toastr.success(response.message, 'Éxito');\r\n        },\r\n        error: (error) => this.toastr.error(error?.error?.message, 'Error'),\r\n      });\r\n      this.rowSelectedDelete = {} as StatusDelete;\r\n    }\r\n    this.fetchGroups();\r\n  }\r\n\r\n  createNewRecord(): void {\r\n    this.action = 'create';\r\n    this.visibleModal = true;\r\n    this.header = 'Crear estado';\r\n    this.label = 'Crear';\r\n  }\r\n\r\n  getObjectByAction(): StatusEdit | StatusCreate {\r\n    return this.action === 'edit'  ? this.rowSelectedEdit : this.rowCreate;\r\n  }\r\n\r\n  columnsToDeleteByEdit: string[] = ['acciones', 'creado_a', 'actualizado_a', 'creador_id', 'modificador_id'];\r\n  columnsToDeleteByCreate: string[] = ['acciones', 'creado_a', 'actualizado_a', 'creador_id', 'modificador_id', '_id'];\r\n  getColumnsByAction(): ColumnTable[] {\r\n    if(this.action === 'edit'){\r\n      return this.columns.filter((column: ColumnTable) => !this.columnsToDeleteByEdit.includes(column.key));\r\n    }\r\n    return this.columns.filter((column: ColumnTable) => !this.columnsToDeleteByCreate.includes(column.key));\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}