{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../core\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../shared/list-errors.component\";\nfunction AuthComponent_input_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_input_13_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.newRequestUser.names = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newRequestUser.names);\n  }\n}\nfunction AuthComponent_input_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_input_15_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.newRequestUser.lastNames = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.newRequestUser.lastNames);\n  }\n}\nfunction AuthComponent_fieldset_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"fieldset\", 12)(1, \"input\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_fieldset_18_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.newRequestUser.telefono = $event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.newRequestUser.telefono);\n  }\n}\nfunction AuthComponent_div_21_input_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 31);\n    i0.ɵɵlistener(\"change\", function AuthComponent_div_21_input_4_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.onChangeUser($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r12.isUser);\n  }\n}\nfunction AuthComponent_div_21_input_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 32);\n    i0.ɵɵlistener(\"change\", function AuthComponent_div_21_input_8_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.onChangeAdministrator($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r13.isAdministrator);\n  }\n}\nfunction AuthComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"section\", 25)(2, \"label\", 26);\n    i0.ɵɵtext(3, \" Usuario \");\n    i0.ɵɵtemplate(4, AuthComponent_div_21_input_4_Template, 1, 1, \"input\", 27);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"section\", 28)(6, \"label\", 29);\n    i0.ɵɵtext(7, \" Administrador \");\n    i0.ɵɵtemplate(8, AuthComponent_div_21_input_8_Template, 1, 1, \"input\", 30);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.isAdministrator);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.isUser);\n  }\n}\nconst _c0 = function () {\n  return [\"/login\"];\n};\nfunction AuthComponent_a_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 33);\n    i0.ɵɵtext(1, \"Have an account?\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(1, _c0));\n  }\n}\nconst _c1 = function () {\n  return [\"/register\"];\n};\nfunction AuthComponent_a_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 33);\n    i0.ɵɵtext(1, \"Need an account?\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(1, _c1));\n  }\n}\nexport class AuthComponent {\n  constructor(route, router, userService, fb, toastr) {\n    this.route = route;\n    this.router = router;\n    this.userService = userService;\n    this.fb = fb;\n    this.toastr = toastr;\n    this.authType = '';\n    this.title = '';\n    this.errors = {\n      errors: {}\n    };\n    this.isSubmitting = false;\n    this.isUser = false;\n    this.isAdministrator = false;\n    this.newRequestUser = {\n      email: '',\n      password: '',\n      names: '',\n      lastNames: ''\n    };\n    this.userResponse = {\n      message: '',\n      token: '',\n      userInfo: {}\n    };\n    // use FormBuilder to create a form group\n    this.authForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.route.url.subscribe(data => {\n      // Get the last piece of the URL (it's either 'login' or 'register')\n      this.authType = data[data.length - 1].path;\n      // Set a title for the page accordingly\n      this.title = this.authType === 'login' ? 'Sign in' : 'Sign up';\n      // add form control for username if this is the register page\n      if (this.authType === 'register') {\n        this.authForm.addControl('names', new FormControl());\n        this.authForm.addControl('lastNames', new FormControl());\n        this.authForm.addControl('telefono', new FormControl());\n      }\n    });\n  }\n  onChangeUser(event) {\n    const isChecked = event.target.checked;\n    if (!this.isAdministrator && isChecked) {\n      this.isUser = isChecked;\n      return;\n    }\n    this.isUser = isChecked;\n  }\n  onChangeAdministrator(event) {\n    const isChecked = event.target.checked;\n    if (!this.isUser && isChecked) {\n      this.isAdministrator = isChecked;\n      return;\n    }\n    this.isAdministrator = isChecked;\n  }\n  handleOnSubmitForm() {\n    const {\n      password,\n      email,\n      names,\n      lastNames,\n      telefono\n    } = this.newRequestUser;\n    if (this.authType === 'login') {\n      this.userService.attemptAuth(this.authType, password, email).subscribe({\n        next: response => {\n          this.userResponse = response;\n          this.toastr.success(this.userResponse.message, 'Login exitoso');\n          this.router.navigateByUrl('/my-tickets');\n        },\n        error: err => this.toastr.error(err)\n      });\n      return;\n    }\n    this.userService.registerNewUser(this.authType, password, email, names, lastNames, telefono, this.isAdministrator, this.isUser).subscribe({\n      next: data => {\n        this.userResponse = data;\n        this.router.navigateByUrl('/login');\n      },\n      error: err => this.toastr.error(err)\n    });\n  }\n}\nAuthComponent.ɵfac = function AuthComponent_Factory(t) {\n  return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ToastrService));\n};\nAuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthComponent,\n  selectors: [[\"app-auth-page\"]],\n  decls: 28,\n  vars: 14,\n  consts: [[1, \"content-login\"], [1, \"auth-page\"], [1, \"bg-light\", \"rounded\", \"p-3\"], [2, \"margin\", \".5rem 10rem\"], [\"src\", \"../../assets/logo-dis.png\", \"alt\", \"logo-dis\", 2, \"width\", \"100%\", \"height\", \"90px\", \"object-fit\", \"cover\"], [1, \"text-center\"], [3, \"errors\"], [\"ngModel\", \"\", 3, \"formGroup\", \"ngSubmit\"], [3, \"disabled\"], [1, \"form-group\"], [\"formControlName\", \"names\", \"placeholder\", \"Names\", \"class\", \"form-control form-control-lg\", \"type\", \"text\", \"name\", \"names\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"formControlName\", \"lastNames\", \"placeholder\", \"LastNames\", \"class\", \"form-control form-control-lg\", \"type\", \"text\", \"name\", \"lastNames\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [1, \"form-group\", \"mb-2\"], [\"formControlName\", \"email\", \"placeholder\", \"Email\", \"type\", \"text\", \"name\", \"email\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"form-group mb-2\", 4, \"ngIf\"], [\"formControlName\", \"password\", \"placeholder\", \"Password\", \"type\", \"password\", \"name\", \"password\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"role-container\", 4, \"ngIf\"], [1, \"d-flex\", \"flex-column\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"mb-2\", 3, \"disabled\"], [1, \"text-xs-center\", \"align-self-center\"], [3, \"routerLink\", 4, \"ngIf\"], [\"formControlName\", \"names\", \"placeholder\", \"Names\", \"type\", \"text\", \"name\", \"names\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"formControlName\", \"lastNames\", \"placeholder\", \"LastNames\", \"type\", \"text\", \"name\", \"lastNames\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [\"formControlName\", \"telefono\", \"placeholder\", \"Telefono\", \"type\", \"text\", \"name\", \"telefono\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngModelChange\"], [1, \"role-container\"], [1, \"role-user-container\"], [\"for\", \"usuario\", 1, \"form-check-label\", \"d-flex\", \"flex-column\"], [\"type\", \"checkbox\", \"class\", \"form-check-input\", \"id\", \"usuario\", 3, \"value\", \"change\", 4, \"ngIf\"], [1, \"d-flex\", \"flex-column\", \"align-items-center\"], [\"for\", \"administrador\", 1, \"form-check-label\", \"d-flex\", \"flex-column\"], [\"type\", \"checkbox\", \"class\", \"form-check-input\", \"id\", \"administrador\", 3, \"value\", \"change\", 4, \"ngIf\"], [\"type\", \"checkbox\", \"id\", \"usuario\", 1, \"form-check-input\", 3, \"value\", \"change\"], [\"type\", \"checkbox\", \"id\", \"administrador\", 1, \"form-check-input\", 3, \"value\", \"change\"], [3, \"routerLink\"]],\n  template: function AuthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\")(3, \"div\")(4, \"div\", 2)(5, \"div\", 3);\n      i0.ɵɵelement(6, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"h4\", 5);\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"app-list-errors\", 6);\n      i0.ɵɵelementStart(10, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.handleOnSubmitForm();\n      });\n      i0.ɵɵelementStart(11, \"fieldset\", 8)(12, \"fieldset\", 9);\n      i0.ɵɵtemplate(13, AuthComponent_input_13_Template, 1, 1, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"fieldset\", 9);\n      i0.ɵɵtemplate(15, AuthComponent_input_15_Template, 1, 1, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"fieldset\", 12)(17, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.newRequestUser.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(18, AuthComponent_fieldset_18_Template, 2, 1, \"fieldset\", 14);\n      i0.ɵɵelementStart(19, \"fieldset\", 12)(20, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function AuthComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.newRequestUser.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(21, AuthComponent_div_21_Template, 9, 2, \"div\", 16);\n      i0.ɵɵelementStart(22, \"div\", 17)(23, \"button\", 18);\n      i0.ɵɵtext(24);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"p\", 19);\n      i0.ɵɵtemplate(26, AuthComponent_a_26_Template, 2, 2, \"a\", 20);\n      i0.ɵɵtemplate(27, AuthComponent_a_27_Template, 2, 2, \"a\", 20);\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"errors\", ctx.errors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.isSubmitting);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.authType == \"register\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.authType == \"register\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.newRequestUser.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.authType === \"register\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.newRequestUser.password);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.authType === \"register\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.authForm.valid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.title, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.authType == \"register\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.authType == \"login\");\n    }\n  },\n  dependencies: [i1.RouterLink, i5.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.FormGroupDirective, i3.FormControlName, i6.ListErrorsComponent],\n  styles: [\".auth-page[_ngcontent-%COMP%]  {\\r\\n  border-radius: .8rem;\\r\\n  box-shadow: -10px 14px 21px -4px rgba(115,113,113,0.52);\\r\\n-webkit-box-shadow: -10px 14px 21px -4px rgba(115,113,113,0.52);\\r\\n-moz-box-shadow: -10px 14px 21px -4px rgba(115,113,113,0.52);\\r\\n}\\r\\n\\r\\n.role-container[_ngcontent-%COMP%]  {\\r\\n  display: grid;\\r\\n  grid-template-columns: 1fr 1fr;\\r\\n  grid-gap: 1rem;\\r\\n  margin: 0rem 4rem 1rem 4rem;\\r\\n}\\r\\n\\r\\n.role-user-container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.content-login[_ngcontent-%COMP%] {\\r\\n  display: grid;\\r\\n  grid-template-columns: auto;\\r\\n  place-content: center;\\r\\n  gap: 2rem;\\r\\n  height: 100vh;\\r\\n  margin: 0rem 5rem;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9hdXRoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxvQkFBb0I7RUFDcEIsdURBQXVEO0FBQ3pELCtEQUErRDtBQUMvRCw0REFBNEQ7QUFDNUQ7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLGNBQWM7RUFDZCwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDJCQUEyQjtFQUMzQixxQkFBcUI7RUFDckIsU0FBUztFQUNULGFBQWE7RUFDYixpQkFBaUI7QUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIuYXV0aC1wYWdlICB7XHJcbiAgYm9yZGVyLXJhZGl1czogLjhyZW07XHJcbiAgYm94LXNoYWRvdzogLTEwcHggMTRweCAyMXB4IC00cHggcmdiYSgxMTUsMTEzLDExMywwLjUyKTtcclxuLXdlYmtpdC1ib3gtc2hhZG93OiAtMTBweCAxNHB4IDIxcHggLTRweCByZ2JhKDExNSwxMTMsMTEzLDAuNTIpO1xyXG4tbW96LWJveC1zaGFkb3c6IC0xMHB4IDE0cHggMjFweCAtNHB4IHJnYmEoMTE1LDExMywxMTMsMC41Mik7XHJcbn1cclxuXHJcbi5yb2xlLWNvbnRhaW5lciAge1xyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xyXG4gIGdyaWQtZ2FwOiAxcmVtO1xyXG4gIG1hcmdpbjogMHJlbSA0cmVtIDFyZW0gNHJlbTtcclxufVxyXG5cclxuLnJvbGUtdXNlci1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLmNvbnRlbnQtbG9naW4ge1xyXG4gIGRpc3BsYXk6IGdyaWQ7XHJcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvO1xyXG4gIHBsYWNlLWNvbnRlbnQ6IGNlbnRlcjtcclxuICBnYXA6IDJyZW07XHJcbiAgaGVpZ2h0OiAxMDB2aDtcclxuICBtYXJnaW46IDByZW0gNXJlbTtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","i0","AuthComponent","constructor","route","router","userService","fb","toastr","errors","email","password","names","lastNames","message","token","userInfo","authForm","group","required","ngOnInit","url","subscribe","data","authType","length","path","title","addControl","onChangeUser","event","isChecked","target","checked","isAdministrator","isUser","onChangeAdministrator","handleOnSubmitForm","telefono","newRequestUser","attemptAuth","next","response","userResponse","success","navigateByUrl","error","err","registerNewUser","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\nayeli\\OneDrive\\Escritorio\\service-desk\\frontend\\src\\app\\auth\\auth.component.ts","C:\\Users\\nayeli\\OneDrive\\Escritorio\\service-desk\\frontend\\src\\app\\auth\\auth.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Errors, UserService } from '../core';\r\nimport { User, UserInfo, UserResponse } from '../core/interfaces/user.interface';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-auth-page',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css'],\r\n})\r\nexport class AuthComponent implements OnInit {\r\n  authType: string = '';\r\n  title: String = '';\r\n  errors: Errors = { errors: {} };\r\n  isSubmitting = false;\r\n  isUser = false;\r\n  isAdministrator = false;\r\n  authForm: FormGroup;\r\n  newRequestUser: User = {\r\n    email: '',\r\n    password: '',\r\n    names: '',\r\n    lastNames: '',\r\n  };\r\n  userResponse: UserResponse = {\r\n    message: '',\r\n    token: '',\r\n    userInfo: {} as UserInfo,\r\n  };\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {\r\n    // use FormBuilder to create a form group\r\n    this.authForm = this.fb.group({\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.url.subscribe((data) => {\r\n      // Get the last piece of the URL (it's either 'login' or 'register')\r\n      this.authType = data[data.length - 1].path;\r\n      // Set a title for the page accordingly\r\n      this.title = this.authType === 'login' ? 'Sign in' : 'Sign up';\r\n      // add form control for username if this is the register page\r\n      if (this.authType === 'register') {\r\n        this.authForm.addControl('names', new FormControl());\r\n        this.authForm.addControl('lastNames', new FormControl());\r\n        this.authForm.addControl('telefono', new FormControl());\r\n      }\r\n    });\r\n  }\r\n\r\n  onChangeUser(event: any) {\r\n    const isChecked: boolean = event.target.checked;\r\n    if (!this.isAdministrator && isChecked) {\r\n      this.isUser = isChecked;\r\n      return;\r\n    }\r\n    this.isUser = isChecked;\r\n  }\r\n\r\n  onChangeAdministrator(event: any) {\r\n    const isChecked: boolean = event.target.checked;\r\n    if (!this.isUser && isChecked) {\r\n      this.isAdministrator = isChecked;\r\n      return;\r\n    }\r\n    this.isAdministrator = isChecked;\r\n  }\r\n\r\n  handleOnSubmitForm() {\r\n    const { password, email, names, lastNames, telefono } = this.newRequestUser;\r\n    if (this.authType === 'login') {\r\n      this.userService.attemptAuth(this.authType, password, email).subscribe({\r\n        next: (response) => {\r\n          this.userResponse = response;\r\n          this.toastr.success(this.userResponse.message, 'Login exitoso');\r\n          this.router.navigateByUrl('/my-tickets');\r\n        },\r\n        error: (err) => this.toastr.error(err),\r\n      });\r\n\r\n      return;\r\n    }\r\n    this.userService\r\n      .registerNewUser(\r\n        this.authType,\r\n        password,\r\n        email,\r\n        names!,\r\n        lastNames!,\r\n        telefono!,\r\n        this.isAdministrator,\r\n        this.isUser\r\n      )\r\n      .subscribe({\r\n        next: (data) => {\r\n          this.userResponse = data;\r\n          this.router.navigateByUrl('/login');\r\n        },\r\n        error: (err) => this.toastr.error(err),\r\n      });\r\n  }\r\n}\r\n","<div class=\"content-login\">\r\n  <div class=\"auth-page\">\r\n    <div>\r\n      <div>\r\n        <div class=\"bg-light rounded p-3\">\r\n          <!-- <h1 class=\"text-center\">Dynamic Incident System | DIS</h1> -->\r\n          <div style=\"margin: .5rem 10rem\"> \r\n            <img src=\"../../assets/logo-dis.png\" alt=\"logo-dis\" style=\"width: 100%; height: 90px; object-fit: cover;\" />\r\n          </div>\r\n          <h4 class=\"text-center\">{{ title }}</h4>\r\n          <app-list-errors [errors]=\"errors\"></app-list-errors>\r\n          <form [formGroup]=\"authForm\" (ngSubmit)=\"handleOnSubmitForm()\" ngModel=>\r\n            <fieldset [disabled]=\"isSubmitting\">\r\n              <fieldset class=\"form-group\">\r\n                <input\r\n                  formControlName=\"names\"\r\n                  placeholder=\"Names\"\r\n                  class=\"form-control form-control-lg\"\r\n                  type=\"text\"\r\n                  *ngIf=\"authType == 'register'\"\r\n                  name=\"names\"\r\n                  [(ngModel)]=\"newRequestUser.names\"\r\n                />\r\n              </fieldset>\r\n              <fieldset class=\"form-group\">\r\n                <input\r\n                  formControlName=\"lastNames\"\r\n                  placeholder=\"LastNames\"\r\n                  class=\"form-control form-control-lg\"\r\n                  type=\"text\"\r\n                  *ngIf=\"authType == 'register'\"\r\n                  name=\"lastNames\"\r\n                  [(ngModel)]=\"newRequestUser.lastNames\"\r\n                />\r\n              </fieldset>\r\n              <fieldset class=\"form-group mb-2\">\r\n                <input\r\n                  formControlName=\"email\"\r\n                  placeholder=\"Email\"\r\n                  class=\"form-control form-control-lg\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  [(ngModel)]=\"newRequestUser.email\"\r\n                />\r\n              </fieldset>\r\n              <fieldset *ngIf=\"authType === 'register'\" class=\"form-group mb-2\">\r\n                <input\r\n                  formControlName=\"telefono\"\r\n                  placeholder=\"Telefono\"\r\n                  class=\"form-control form-control-lg\"\r\n                  type=\"text\"\r\n                  name=\"telefono\"\r\n                  [(ngModel)]=\"newRequestUser.telefono\"\r\n                />\r\n              </fieldset>\r\n              <fieldset class=\"form-group mb-2\">\r\n                <input\r\n                  formControlName=\"password\"\r\n                  placeholder=\"Password\"\r\n                  class=\"form-control form-control-lg\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  [(ngModel)]=\"newRequestUser.password\"\r\n                />\r\n              </fieldset>\r\n              <div class=\"role-container\" *ngIf=\"authType === 'register'\" >\r\n                <section class=\"role-user-container\">\r\n                  <label class=\"form-check-label d-flex flex-column\" for=\"usuario\">\r\n                    Usuario\r\n                    <input type=\"checkbox\" class=\"form-check-input\" id=\"usuario\" (change)=\"onChangeUser($event)\" [value]=\"isUser\" *ngIf=\"!isAdministrator\" />\r\n                  </label>\r\n                </section>\r\n                <section class=\"d-flex flex-column align-items-center\">\r\n                  <label class=\"form-check-label d-flex flex-column\" for=\"administrador\">\r\n                    Administrador\r\n                    <input type=\"checkbox\" class=\"form-check-input\" id=\"administrador\" (change)=\"onChangeAdministrator($event)\" [value]=\"isAdministrator\" *ngIf=\"!isUser\" />\r\n                  </label>\r\n                </section>\r\n              </div>\r\n              <div class=\"d-flex flex-column\">\r\n                <button\r\n                  class=\"btn btn-lg btn-primary mb-2\"\r\n                  [disabled]=\"!authForm.valid\"\r\n                  type=\"submit\"\r\n                >\r\n                  {{ title }}\r\n                </button>\r\n                <p class=\"text-xs-center align-self-center\">\r\n                  <a [routerLink]=\"['/login']\" *ngIf=\"authType == 'register'\"\r\n                    >Have an account?</a\r\n                  >\r\n                  <a [routerLink]=\"['/register']\" *ngIf=\"authType == 'login'\"\r\n                    >Need an account?</a\r\n                  >\r\n                </p>\r\n              </div>\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}