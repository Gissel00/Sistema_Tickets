{"ast":null,"code":"import { PrimeIcons } from 'primeng/api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core\";\nimport * as i2 from \"src/app/core/services/categories.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../shared/table/table.component\";\nimport * as i7 from \"primeng/dialog\";\nimport * as i8 from \"primeng/api\";\nimport * as i9 from \"primeng/button\";\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nfunction CategoriesComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"input\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function CategoriesComponent_div_19_Template_input_ngModelChange_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const column_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.getObjectByAction()[column_r3.key] = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const column_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", column_r3.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"name\", column_r3.key)(\"ngModel\", ctx_r0.getObjectByAction()[column_r3.key])(\"ngModelOptions\", i0.ɵɵpureFunction0(5, _c0))(\"disabled\", column_r3.key === \"_id\");\n  }\n}\nfunction CategoriesComponent_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 18);\n    i0.ɵɵlistener(\"onClick\", function CategoriesComponent_ng_template_20_Template_p_button_onClick_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onSubmitCategory());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(1, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function CategoriesComponent_ng_template_20_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.visibleModal = false);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r1.label);\n  }\n}\nfunction CategoriesComponent_ng_template_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 20);\n    i0.ɵɵlistener(\"onClick\", function CategoriesComponent_ng_template_23_Template_p_button_onClick_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onSubmitCategory());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(1, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function CategoriesComponent_ng_template_23_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.deleteModal = false);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r2.label);\n  }\n}\nexport class CategoriesComponent {\n  get getCategories() {\n    return [...this.categories];\n  }\n  constructor(userService, categoryService, toastr) {\n    this.userService = userService;\n    this.categoryService = categoryService;\n    this.toastr = toastr;\n    this.categories = [];\n    this.visibleModal = false;\n    this.deleteModal = false;\n    this.label = 'Crear';\n    this.header = '';\n    this.action = '';\n    this.message = '';\n    this.messageResponse = '';\n    this.rowCreate = {};\n    this.rowSelectedEdit = {};\n    this.rowSelectedDelete = {\n      _id: ''\n    };\n    this.columns = [{\n      name: 'Id',\n      key: '_id',\n      show: false,\n      isAvailableOnCreation: true,\n      isAvailableOnEdit: true\n    }, {\n      name: 'Nombre',\n      key: 'nombre',\n      show: true,\n      isAvailableOnCreation: true,\n      isAvailableOnEdit: true\n    }, {\n      name: 'Color',\n      key: 'color',\n      show: true,\n      isAvailableOnCreation: true,\n      isAvailableOnEdit: true\n    }, {\n      name: 'Grupo',\n      key: 'grupo_id',\n      show: true,\n      isAvailableOnCreation: true,\n      isAvailableOnEdit: true\n    }, {\n      name: 'Creador',\n      key: 'creador_id',\n      show: false,\n      isAvailableOnCreation: true,\n      isAvailableOnEdit: true\n    }, {\n      name: 'modificador',\n      key: 'modificador_id',\n      show: false,\n      isAvailableOnCreation: true,\n      isAvailableOnEdit: true\n    }, {\n      name: 'Creado',\n      key: 'creado_a',\n      show: true,\n      isAvailableOnCreation: true,\n      isAvailableOnEdit: true\n    }, {\n      name: 'Actualizado',\n      key: 'actualizado_a',\n      show: true,\n      isAvailableOnCreation: true,\n      isAvailableOnEdit: true\n    }, {\n      name: 'Acciones',\n      key: 'acciones',\n      show: true,\n      isAvailableOnCreation: true,\n      isAvailableOnEdit: true,\n      hasEditButton: true,\n      hasRemoveButton: true,\n      hasCreateButton: true,\n      edit: row => {\n        this.rowSelectedEdit = row;\n        this.visibleModal = true;\n        this.label = 'Guardar Cambios';\n        this.header = 'Editar grupo';\n        this.action = 'edit';\n      },\n      remove: row => {\n        this.rowSelectedDelete = row;\n        this.label = 'Eliminar';\n        this.header = 'Eliminar grupo';\n        this.action = 'delete';\n        this.message = `¿Está seguro que desea eliminar el grupo: ${row._id}?`;\n        this.deleteModal = true;\n      },\n      create: () => {\n        this.action = 'create';\n        this.visibleModal = true;\n        this.header = 'Crear grupo';\n        this.label = 'Crear';\n      },\n      createIcon: PrimeIcons.PLUS,\n      editIcon: PrimeIcons.PENCIL,\n      removeIcon: PrimeIcons.TRASH\n    }];\n    this.columnsToDeleteByEdit = ['acciones', 'creado_a', 'actualizado_a', 'creador_id', 'modificador_id'];\n    this.columnsToDeleteByCreate = ['acciones', 'creado_a', 'actualizado_a', 'creador_id', 'modificador_id', '_id'];\n  }\n  ngOnInit() {\n    this.userService.populate();\n    this.fetchCategories();\n  }\n  fetchCategories() {\n    this.categoryService.getCategories().subscribe({\n      next: response => {\n        this.categories = this.categoryService.materializeCategories(response);\n      },\n      error: error => console.error(error)\n    });\n  }\n  filteredColums() {\n    let filteredColumns = this.columns.filter(column => column.show === true);\n    return filteredColumns;\n  }\n  // onSubmitCategory(): void {\n  //   this.visibleModal = false;\n  //   this.deleteModal = false;\n  //   if (this.action === 'edit') {\n  //     this.categoryService.editCategory(this.rowSelectedEdit).subscribe({\n  //       next: (response) => {\n  //         this.toastr.success('Se modifico el registro', 'Éxito');\n  //         this.categories = this.categories.map(category => {\n  //           if (category._id === response._id) {\n  //             return {\n  //               _id: response._id,\n  //               nombre: response.nombre,\n  //               color: response.color,\n  //               grupo_id: response.grupo_id,\n  //               creador_id: response.creador_id,\n  //               modificador_id: response.modificador_id,\n  //               creado_a: new Date(response.creado_a).toLocaleDateString('es-ES'),\n  //               actualizado_a: new Date(response.actualizado_a).toLocaleDateString(\n  //                 'es-ES'\n  //               ),\n  //             };\n  //           }\n  //           return category;\n  //         });\n  //       },\n  //       error: (error) => {\n  //         this.toastr.error(error?.message, 'Error');\n  //       },\n  //     });\n  //     this.rowSelectedEdit = {} as CategoryEdit;\n  //   }\n  //   if (this.action === 'create') {\n  //     this.categoryService.createCategory(this.rowCreate).subscribe({\n  //       next: (response) => {\n  //         this.toastr.success(response.message, 'Éxito');\n  //         this.fetchCategories();\n  //       },\n  //     });\n  //     this.rowCreate = {} as CategoryCreate;\n  //   }\n  //   if (this.action === 'delete') {\n  //     this.categoryService\n  //       .deleteCategory(this.rowSelectedDelete._id)\n  //       .subscribe({\n  //         next: (response) => {\n  //           this.toastr.success(response.message, 'Éxito');\n  //           this.fetchCategories();\n  //         },\n  //         error: (error) => this.toastr.error(error?.error?.message, 'Error'),\n  //       });\n  //     this.rowSelectedDelete = {} as CategoryDelete;\n  //   }\n  // }\n  createNewRecord() {\n    this.action = 'create';\n    this.visibleModal = true;\n    this.header = 'Crear estado';\n    this.label = 'Crear';\n  }\n  getObjectByAction() {\n    return this.action === 'edit' ? this.rowSelectedEdit : this.rowCreate;\n  }\n  getColumnsByAction() {\n    if (this.action === 'edit') {\n      return this.columns.filter(column => !this.columnsToDeleteByEdit.includes(column.key));\n    }\n    return this.columns.filter(column => !this.columnsToDeleteByCreate.includes(column.key));\n  }\n}\nCategoriesComponent.ɵfac = function CategoriesComponent_Factory(t) {\n  return new (t || CategoriesComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.CategoriesService), i0.ɵɵdirectiveInject(i3.ToastrService));\n};\nCategoriesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CategoriesComponent,\n  selectors: [[\"app-categories\"]],\n  decls: 24,\n  vars: 14,\n  consts: [[2, \"background-color\", \"#f2f2f2\"], [1, \"banner\"], [1, \"text-banner\"], [1, \"container\"], [1, \"card\", \"border-0\", \"shadow\", \"centered-page\"], [1, \"card-body\", \"p-5\"], [1, \"table-responsive-md\"], [3, \"columns\", \"data\", \"classes\"], [3, \"onClick\"], [3, \"visible\", \"transitionOptions\", \"modal\", \"header\", \"draggable\", \"visibleChange\"], [1, \"form-group\", 2, \"width\", \"500px\", \"background\", \"#071426\"], [1, \"container-fields\"], [1, \"d-flex\", \"flex-wrap\", \"gap-3\", \"justify-content-center\", \"align-items-center\"], [4, \"ngFor\", \"ngForOf\"], [\"pTemplate\", \"footer\"], [\"transitionOptions\", \"300ms\", 3, \"visible\", \"modal\", \"header\", \"draggable\", \"visibleChange\"], [1, \"form-label\", \"item\"], [\"type\", \"text\", 1, \"form-control\", 3, \"name\", \"ngModel\", \"ngModelOptions\", \"disabled\", \"ngModelChange\"], [\"type\", \"button\", 1, \"p-button-success\", 3, \"label\", \"onClick\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Cancelar\", 1, \"p-button-danger\", 3, \"click\"], [\"type\", \"button\", 1, \"p-button-danger\", 3, \"label\", \"onClick\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"Cancelar\", 1, \"p-button-secondary\", 3, \"click\"]],\n  template: function CategoriesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"h3\", 2);\n      i0.ɵɵtext(4, \"Categorias\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 0);\n      i0.ɵɵelement(6, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 3)(8, \"div\", 4)(9, \"div\", 5)(10, \"section\", 6);\n      i0.ɵɵelement(11, \"app-table\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"section\")(13, \"p-button\", 8);\n      i0.ɵɵlistener(\"onClick\", function CategoriesComponent_Template_p_button_onClick_13_listener() {\n        return ctx.createNewRecord();\n      });\n      i0.ɵɵtext(14, \"Crear Categoria\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"p-dialog\", 9);\n      i0.ɵɵlistener(\"visibleChange\", function CategoriesComponent_Template_p_dialog_visibleChange_15_listener($event) {\n        return ctx.visibleModal = $event;\n      });\n      i0.ɵɵelementStart(16, \"form\", 10)(17, \"section\", 11)(18, \"div\", 12);\n      i0.ɵɵtemplate(19, CategoriesComponent_div_19_Template, 4, 6, \"div\", 13);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(20, CategoriesComponent_ng_template_20_Template, 2, 1, \"ng-template\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"p-dialog\", 15);\n      i0.ɵɵlistener(\"visibleChange\", function CategoriesComponent_Template_p_dialog_visibleChange_21_listener($event) {\n        return ctx.deleteModal = $event;\n      });\n      i0.ɵɵtext(22);\n      i0.ɵɵtemplate(23, CategoriesComponent_ng_template_23_Template, 2, 1, \"ng-template\", 14);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"columns\", ctx.filteredColums())(\"data\", ctx.getCategories)(\"classes\", \"table table-bordered table-striped table-hover\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"visible\", ctx.visibleModal)(\"transitionOptions\", \"300ms\")(\"modal\", true)(\"header\", ctx.header)(\"draggable\", false);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.getColumnsByAction());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"visible\", ctx.deleteModal)(\"modal\", true)(\"header\", ctx.header)(\"draggable\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.message, \" \");\n    }\n  },\n  dependencies: [i4.NgForOf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm, i6.TableComponent, i7.Dialog, i8.PrimeTemplate, i9.ButtonDirective, i9.Button],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["PrimeIcons","i0","ctx_r4","CategoriesComponent","getCategories","categories","constructor","userService","categoryService","toastr","_id","name","key","show","isAvailableOnCreation","isAvailableOnEdit","hasEditButton","hasRemoveButton","hasCreateButton","edit","row","rowSelectedEdit","visibleModal","label","header","action","remove","rowSelectedDelete","message","deleteModal","create","createIcon","PLUS","editIcon","PENCIL","removeIcon","TRASH","ngOnInit","populate","fetchCategories","subscribe","next","response","materializeCategories","error","console","filteredColums","filteredColumns","columns","filter","column","createNewRecord","getObjectByAction","rowCreate","getColumnsByAction","columnsToDeleteByEdit","includes","columnsToDeleteByCreate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\nayeli\\OneDrive\\Escritorio\\service-desk\\frontend\\src\\app\\pages\\categories\\categories.component.ts","C:\\Users\\nayeli\\OneDrive\\Escritorio\\service-desk\\frontend\\src\\app\\pages\\categories\\categories.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { PrimeIcons } from 'primeng/api';\r\nimport { UserService } from 'src/app/core';\r\nimport {\r\n  CategoriesResponse,\r\n  Category,\r\n  CategoryCreate,\r\n  CategoryDelete,\r\n  CategoryEdit,\r\n} from 'src/app/core/interfaces/categories.interface';\r\nimport { ColumnTable } from 'src/app/core/interfaces/sidebar.links.interface';\r\nimport { CategoriesService } from 'src/app/core/services/categories.service';\r\n\r\n@Component({\r\n  selector: 'app-categories',\r\n  templateUrl: './categories.component.html',\r\n  styles: [],\r\n})\r\nexport class CategoriesComponent {\r\n  private categories: Category[] = [];\r\n  get getCategories(): Category[] {\r\n    return [...this.categories];\r\n  }\r\n  visibleModal: boolean = false;\r\n  deleteModal: boolean = false;\r\n  label: string = 'Crear';\r\n  header: string = '';\r\n  action: string = '';\r\n  message: string = '';\r\n  messageResponse: string = '';\r\n  rowCreate: CategoryCreate = {} as CategoryCreate;\r\n  rowSelectedEdit: CategoryEdit = {} as CategoryEdit;\r\n  rowSelectedDelete: CategoryDelete = { _id: '' };\r\n  columns: ColumnTable[] = [\r\n    {\r\n      name: 'Id',\r\n      key: '_id',\r\n      show: false,\r\n      isAvailableOnCreation: true,\r\n      isAvailableOnEdit: true,\r\n    },\r\n    {\r\n      name: 'Nombre',\r\n      key: 'nombre',\r\n      show: true,\r\n      isAvailableOnCreation: true,\r\n      isAvailableOnEdit: true,\r\n    },\r\n    {\r\n      name: 'Color',\r\n      key: 'color',\r\n      show: true,\r\n      isAvailableOnCreation: true,\r\n      isAvailableOnEdit: true,\r\n    },\r\n    {\r\n      name: 'Grupo',\r\n      key: 'grupo_id',\r\n      show: true,\r\n      isAvailableOnCreation: true,\r\n      isAvailableOnEdit: true,\r\n    },\r\n    {\r\n      name: 'Creador',\r\n      key: 'creador_id',\r\n      show: false,\r\n      isAvailableOnCreation: true,\r\n      isAvailableOnEdit: true,\r\n    },\r\n    {\r\n      name: 'modificador',\r\n      key: 'modificador_id',\r\n      show: false,\r\n      isAvailableOnCreation: true,\r\n      isAvailableOnEdit: true,\r\n    },\r\n    {\r\n      name: 'Creado',\r\n      key: 'creado_a',\r\n      show: true,\r\n      isAvailableOnCreation: true,\r\n      isAvailableOnEdit: true,\r\n    },\r\n    {\r\n      name: 'Actualizado',\r\n      key: 'actualizado_a',\r\n      show: true,\r\n      isAvailableOnCreation: true,\r\n      isAvailableOnEdit: true,\r\n    },\r\n    {\r\n      name: 'Acciones',\r\n      key: 'acciones',\r\n      show: true,\r\n      isAvailableOnCreation: true,\r\n      isAvailableOnEdit: true,\r\n      hasEditButton: true,\r\n      hasRemoveButton: true,\r\n      hasCreateButton: true,\r\n      edit: (row: CategoryEdit) => {\r\n        this.rowSelectedEdit = row;\r\n        this.visibleModal = true;\r\n        this.label = 'Guardar Cambios';\r\n        this.header = 'Editar grupo';\r\n        this.action = 'edit';\r\n      },\r\n      remove: (row: CategoryDelete) => {\r\n        this.rowSelectedDelete = row;\r\n        this.label = 'Eliminar';\r\n        this.header = 'Eliminar grupo';\r\n        this.action = 'delete';\r\n        this.message = `¿Está seguro que desea eliminar el grupo: ${row._id}?`;\r\n        this.deleteModal = true;\r\n      },\r\n      create: () => {\r\n        this.action = 'create';\r\n        this.visibleModal = true;\r\n        this.header = 'Crear grupo';\r\n        this.label = 'Crear';\r\n      },\r\n      createIcon: PrimeIcons.PLUS,\r\n      editIcon: PrimeIcons.PENCIL,\r\n      removeIcon: PrimeIcons.TRASH,\r\n    },\r\n  ];\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private categoryService: CategoriesService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userService.populate();\r\n    this.fetchCategories();\r\n  }\r\n\r\n  fetchCategories(): void {\r\n    this.categoryService.getCategories().subscribe({\r\n      next: (response) => {\r\n        this.categories = this.categoryService.materializeCategories(response);\r\n      },\r\n      error: (error) => console.error(error),\r\n    });\r\n  }\r\n\r\n  filteredColums(): ColumnTable[] {\r\n    let filteredColumns = this.columns.filter(\r\n      (column: ColumnTable) => column.show === true\r\n    );\r\n\r\n    return filteredColumns;\r\n  }\r\n\r\n  // onSubmitCategory(): void {\r\n  //   this.visibleModal = false;\r\n  //   this.deleteModal = false;\r\n  //   if (this.action === 'edit') {\r\n  //     this.categoryService.editCategory(this.rowSelectedEdit).subscribe({\r\n  //       next: (response) => {\r\n  //         this.toastr.success('Se modifico el registro', 'Éxito');\r\n  //         this.categories = this.categories.map(category => {\r\n  //           if (category._id === response._id) {\r\n  //             return {\r\n  //               _id: response._id,\r\n  //               nombre: response.nombre,\r\n  //               color: response.color,\r\n  //               grupo_id: response.grupo_id,\r\n  //               creador_id: response.creador_id,\r\n  //               modificador_id: response.modificador_id,\r\n  //               creado_a: new Date(response.creado_a).toLocaleDateString('es-ES'),\r\n  //               actualizado_a: new Date(response.actualizado_a).toLocaleDateString(\r\n  //                 'es-ES'\r\n  //               ),\r\n  //             };\r\n  //           }\r\n  //           return category;\r\n  //         });\r\n  //       },\r\n  //       error: (error) => {\r\n  //         this.toastr.error(error?.message, 'Error');\r\n  //       },\r\n  //     });\r\n  //     this.rowSelectedEdit = {} as CategoryEdit;\r\n  //   }\r\n  //   if (this.action === 'create') {\r\n  //     this.categoryService.createCategory(this.rowCreate).subscribe({\r\n  //       next: (response) => {\r\n  //         this.toastr.success(response.message, 'Éxito');\r\n  //         this.fetchCategories();\r\n  //       },\r\n  //     });\r\n  //     this.rowCreate = {} as CategoryCreate;\r\n  //   }\r\n  //   if (this.action === 'delete') {\r\n  //     this.categoryService\r\n  //       .deleteCategory(this.rowSelectedDelete._id)\r\n  //       .subscribe({\r\n  //         next: (response) => {\r\n  //           this.toastr.success(response.message, 'Éxito');\r\n  //           this.fetchCategories();\r\n  //         },\r\n  //         error: (error) => this.toastr.error(error?.error?.message, 'Error'),\r\n  //       });\r\n  //     this.rowSelectedDelete = {} as CategoryDelete;\r\n  //   }\r\n  // }\r\n\r\n  createNewRecord(): void {\r\n    this.action = 'create';\r\n    this.visibleModal = true;\r\n    this.header = 'Crear estado';\r\n    this.label = 'Crear';\r\n  }\r\n\r\n  getObjectByAction(): CategoryEdit | CategoryCreate {\r\n    return this.action === 'edit' ? this.rowSelectedEdit : this.rowCreate;\r\n  }\r\n\r\n  columnsToDeleteByEdit: string[] = [\r\n    'acciones',\r\n    'creado_a',\r\n    'actualizado_a',\r\n    'creador_id',\r\n    'modificador_id',\r\n  ];\r\n  columnsToDeleteByCreate: string[] = [\r\n    'acciones',\r\n    'creado_a',\r\n    'actualizado_a',\r\n    'creador_id',\r\n    'modificador_id',\r\n    '_id',\r\n  ];\r\n  getColumnsByAction(): ColumnTable[] {\r\n    if (this.action === 'edit') {\r\n      return this.columns.filter(\r\n        (column: ColumnTable) =>\r\n          !this.columnsToDeleteByEdit.includes(column.key)\r\n      );\r\n    }\r\n    return this.columns.filter(\r\n      (column: ColumnTable) =>\r\n        !this.columnsToDeleteByCreate.includes(column.key)\r\n    );\r\n  }\r\n}\r\n","<div style=\"background-color:  #f2f2f2;\">\r\n  <br>\r\n </div>\r\n<div class=\"banner\">\r\n  <h3 class=\"text-banner\">Categorias</h3>\r\n</div>\r\n<div style=\"background-color:  #f2f2f2;\">\r\n  <br>\r\n </div>\r\n<div class=\"container\">\r\n  <div class=\"card border-0 shadow centered-page\">\r\n  <div class=\"card-body p-5\"> \r\n  <section class=\"table-responsive-md\">\r\n    <app-table [columns]=\"filteredColums()\" [data]=\"getCategories\" [classes]=\"'table table-bordered table-striped table-hover'\" ></app-table>\r\n  </section>\r\n\r\n  <section>\r\n    <p-button (onClick)=\"createNewRecord()\">Crear Categoria</p-button>\r\n  </section>\r\n\r\n  <p-dialog\r\n    [(visible)]=\"visibleModal\"\r\n    [transitionOptions]=\"'300ms'\"\r\n    [modal]=\"true\"\r\n    [header]=\"header\"\r\n    [draggable]=\"false\"\r\n  >\r\n    <form\r\n      class=\"form-group\"\r\n      style=\"width: 500px; background: #071426;\"\r\n    >\r\n      <section class=\"container-fields\">\r\n        <div\r\n          class=\"d-flex flex-wrap gap-3 justify-content-center align-items-center\"\r\n        >\r\n          <div *ngFor=\"let column of getColumnsByAction()\">\r\n            <label class=\"form-label item\">\r\n              {{ column.name }}\r\n              <input\r\n                class=\"form-control\"\r\n                type=\"text\"\r\n                [name]=\"column.key\"\r\n                [(ngModel)]=\"getObjectByAction()[column.key]\"\r\n                [ngModelOptions]=\"{ standalone: true }\"\r\n                [disabled]=\"column.key === '_id'\"\r\n              />\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </form>\r\n    \r\n    <ng-template pTemplate=\"footer\">\r\n      <p-button\r\n        type=\"button\"\r\n        [label]=\"label\"\r\n        class=\"p-button-success\"\r\n        (onClick)=\"onSubmitCategory()\"\r\n      ></p-button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        label=\"Cancelar\"\r\n        class=\"p-button-danger\"\r\n        (click)=\"visibleModal = false\"\r\n      ></button>\r\n    </ng-template>\r\n  </p-dialog>\r\n\r\n  <p-dialog\r\n    [(visible)]=\"deleteModal\"\r\n    transitionOptions=\"300ms\"\r\n    [modal]=\"true\"\r\n    [header]=\"header\"\r\n    [draggable]=\"false\"\r\n  >\r\n    {{ message }}\r\n\r\n    <ng-template pTemplate=\"footer\">\r\n      <p-button\r\n        type=\"button\"\r\n        [label]=\"label\"\r\n        class=\"p-button-danger\"\r\n        (onClick)=\"onSubmitCategory()\" \r\n      ></p-button>\r\n      <button\r\n        pButton\r\n        type=\"button\"\r\n        label=\"Cancelar\"\r\n        class=\"p-button-secondary\"\r\n        (click)=\"deleteModal= false\"\r\n      ></button>\r\n    </ng-template>\r\n  </p-dialog>\r\n    </div>\r\n  </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}